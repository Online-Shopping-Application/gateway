spring.application.name = gateway
server.port = 9090

#eureka configuration
eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka

#spring.cloud.gateway.default-filters[0]=TokenRelay=

spring.security.oauth2.resourceserver.jwt.issuer-uri = http://localhost:8080/realms/example

#spring.security.oauth2.resourceserver.jwt.jwk-set-uri = http://localhost:8080/realms/e-com/protocol/openid-connect/certs
#spring.security.oauth2.client.provider.keycloak.issuer-uri = http://localhost:8080/realms/e-com
#spring.security.oauth2.client.registration.spring-with-test-scope.provider = keycloak
#spring.security.oauth2.client.registration.spring-with-test-scope.client-id = e-com-client
#spring.security.oauth2.client.registration.spring-with-test-scope.client-secret = ddnLPAU7IQWUybAkVdjcz5rqmHROARRb
#spring.security.oauth2.client.registration.spring-with-test-scope.authorization-grant-type = authorization_code
#spring.security.oauth2.client.registration.spring-with-test-scope.scope = openid


#spring.cloud.gateway.routes[0].id = user-service-api-1
#spring.cloud.gateway.routes[0].uri = lb://user-service-api-1
#spring.cloud.gateway.routes[0].predicates[0].name = Path
#spring.cloud.gateway.routes[0].predicates[0].args[pattern] = /user-service/**

#spring.cloud.gateway.routes[1].id = product-service-api-2
#spring.cloud.gateway.routes[1].uri = lb://product-service-api-2
#spring.cloud.gateway.routes[1].predicates[0].name = Path
#spring.cloud.gateway.routes[1].predicates[0].args[pattern] = /product-service/**

#spring.cloud.gateway.routes[2].id = order-service-api-3
#spring.cloud.gateway.routes[2].uri = lb://order-service-api-3
#spring.cloud.gateway.routes[2].predicates[0].name = Path
#spring.cloud.gateway.routes[2].predicates[0].args[pattern] = /order-service/**

spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping = true
